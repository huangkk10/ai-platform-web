services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    ports:
      - "9000:9000"
      - "9443:9443"

  postgres:
    image: pgvector/pgvector:pg15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ai_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: Asia/Taipei
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - ./scripts/init-pgvector.sql:/docker-entrypoint-initdb.d/init-pgvector.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - custom_network

  adminer:
    image: adminer:latest
    container_name: adminer_nas
    restart: unless-stopped
    ports:
      - "9090:8080"
    depends_on:
      - postgres
    networks:
      - custom_network

  django:
    build:
      context: ./backend
    container_name: ai-django
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - TZ=Asia/Taipei
      - DEBUG=1
      - DB_HOST=postgres_db
      - DB_PORT=5432
      - DB_NAME=ai_platform
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./library:/app/library
      - ./config:/app/config  # 添加配置目錄掛載
      - static_files:/app/static
      - media_files:/app/media
    depends_on:
      - postgres
    networks:
      - custom_network

  react:
    build:
      context: ./frontend
    container_name: ai-react
    restart: unless-stopped
    command: npm start
    environment:
      - TZ=Asia/Taipei
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    depends_on:
      - django
    networks:
      - custom_network

  nginx:
    build:
      context: ./nginx
    container_name: ai-nginx
    restart: unless-stopped
    environment:
      - TZ=Asia/Taipei
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_files:/app/static
      - media_files:/app/media
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - django
      - react
    networks:
      - custom_network

volumes:
  portainer_data:
    driver: local
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  static_files:
    driver: local
  media_files:
    driver: local
  node_modules:
    driver: local

networks:
  custom_network:
    driver: bridge